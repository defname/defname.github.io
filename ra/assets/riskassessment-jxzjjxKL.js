var k=Object.defineProperty;var R=(a,e,t)=>e in a?k(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t;var s=(a,e,t)=>(R(a,typeof e!="symbol"?e+"":e,t),t);import{m,b as p,c as y,e as v,d as D}from"./helpers-r1e3qvNS.js";import{l as c}from"./livequery-cPqtMxws.js";import{W as A,G as g,u as w,U as M,ag as E}from"./index-nnix3es0.js";import{l as b}from"./liveriskstree-KOA9bcnr.js";const l={company:"",startDate:0,endDate:void 0,address:"",jobDescr:"",equipment:[],technicians:[],supervisors:[],access:[],risks:[],measures:{},meta:{}};class B{constructor(e){s(this,"id");s(this,"descr");s(this,"company");s(this,"startDate");s(this,"endDate");s(this,"address");s(this,"jobDescr");s(this,"equipment");s(this,"technicians");s(this,"supervisors");s(this,"access");s(this,"risks");s(this,"measures");s(this,"meta");s(this,"initData");s(this,"isReady");s(this,"ready");this.initData={...l},this.isReady=!1,this.init(e)}init(e){this.isReady=!1,this.measures={},this.meta={},m(this,p(l)),e&&m(this,e),this.updateInitData()}clear(){this.init(),this.id=void 0}updateInitData(){const e=p(y(this,l));this.initData=e}reset(){m(this,this.initData)}modified(){for(let e in this.initData)if(!v(this[e],this.initData[e]))return!0;return!1}loadFromDb(e){return this.init({id:e}),this.ready=c.ready().then(()=>c.table("riskassessments").getAsPromise(e)).then(t=>{this.init(t),this.isReady=!0}).catch(t=>{throw Error(t)}),this.ready}async save(){if(this.id===void 0)throw Error("Attempt to update without id");let e={};return e=p(y(this,l)),D.riskassessments.update(this.id,e).then(t=>{if(t===0)throw Error("Could not update. Does ID "+this.id+" exist?");const i=Math.floor(Date.now()/1e3);D.riskassessmentsmeta.update(this.id,{lastChange:i}),this.updateInitData()})}dateStr(e){return e.getUTCFullYear()+"-"+(e.getUTCMonth()+1)+"-"+e.getUTCDate()}getStartDate(){return new Date(this.startDate)}setStartDate(e){this.startDate=this.dateStr(e)}getEndDate(){if(this.endDate)return new Date(this.endDate)}setEndDate(e){e===void 0?this.endDate=void 0:this.endDate=this.dateStr(e)}async calcAllRisks(){await b.ready();const e=await c.table("measures").ready(),t=await c.table("equipment").ready(),i=[],r=[...this.risks];for(this.resetMetaAddedBy(),this.equipment.forEach(n=>{t.get(n).causeRisks.forEach(d=>{r.push(d);const h=this.getMeta(d);h.addedBy.find(u=>u.id===n&&u.type==="equipment")||h.addedBy.push({id:n,type:"equipment"})})});r.length>0;){const n=r.pop();i.includes(n)||(i.push(n),this.getMeasures(n).forEach(d=>{e.get(d).causeRisks.forEach(h=>{r.push(h);const u=this.getMeta(h);u.addedBy.find(f=>f.id===d&&f.type==="measure")||u.addedBy.push({id:d,type:"measure"})})}))}return i}resetMetaAddedBy(){for(let e in this.meta)this.getMeta(parseInt(e)).addedBy.length=0}getMeta(e){return this.meta[e]===void 0&&(this.meta[e]={risk:e,addedBy:[]}),this.meta[e]}getMeasures(e){return this.measures[e]===void 0&&(this.measures[e]=[]),this.measures[e]}getMeasuresAsRef(e){return g(this.getMeasures(e))}addSector(e={}){const t=this.access.map(i=>i.id?i.id:0).reduce((i,r)=>i>r?i+1:r+1,0);this.access.push({id:t,title:"Neuer Sektor "+t,entrance:"",exit:"",anchorPoints:"",comment:"",rescue:"",...e})}}const o=A(new B);function C(a){const e=w();let t=a;return e&&e.path.startsWith("/riskassessment")&&e.params.id!==void 0&&(t=parseInt(e.params.id)),t===void 0?(o.clear(),o):(o.id===t||o.loadFromDb(t),o)}function j(a){const e=C(a),t=g([]),i=()=>{console.log("useLiveAllRisks(): updateAllRisks()"),e.calcAllRisks().then(r=>{t.value=r,console.log("useLiveAllRisks(): updateAllRisks() -> Done")})};return M([()=>e.risks,()=>e.isReady],i),E(()=>{i()}),t}export{j as a,l as d,C as u};
