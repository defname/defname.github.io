import{V as n,W as d,X as o,Y as h,Z as u,_ as m}from"../../vendor-fe-4Mo55.js";import{d as t}from"../composables/database-EV4tUyzx.js";import{_ as c}from"./RiskList.vue_vue_type_script_setup_true_lang-12p0yvzO.js";import{G as f}from"./GenericEditModal-0xE-bflg.js";import{_ as l}from"./RiskCatalog.vue_vue_type_script_setup_true_lang-lOpLqJd8.js";import{p as e}from"../composables/helpers-Kc8KqJcx.js";const _={components:{IonList:n,IonItem:d,IonLabel:o,IonListHeader:h,IonInput:u,RiskList:c,RiskCatalog:l,GenericEditModal:f,IonButton:m},emits:["hasSaved","hasAdded"],props:{id:{type:Number},createNew:Boolean,defaultValues:{type:Object,default:{descr:"",solveRisks:[],causeRisks:[]}}},data(){return{measure:void 0,addSolvedRisks:!1,addCausedRisks:!1}},methods:{loadFromDb(){this.id!==void 0&&t.measures.get(this.id).then(s=>{if(s===void 0){e("Es existiert keine Maßnahme mit der ID "+this.id+" in der Datenbank.","danger");return}this.measure=s})},saveToDb(){var a,r;if(((a=this.measure)==null?void 0:a.descr)===""){e("Die Beschreibung darf nicht leer sein.");return}if(((r=this.measure)==null?void 0:r.solveRisks.length)===0){e("Eine Maßnahme muss mindestens eine Gefährdung lösen.");return}if(this.measure===void 0){e("Etwas ist schief gelaufen.");return}const s={descr:this.measure.descr,solveRisks:[...this.measure.solveRisks],causeRisks:[...this.measure.causeRisks]};if(this.createNew&&t.measures.add(s).then(i=>{e("Die Maßnahme wurde hinzugefügt.","success"),this.$emit("hasAdded",{id:i,...this.measure})}).catch(i=>{throw e("Beim Speichern ist ein Fehler aufgetreten.","danger"),i}),this.id===void 0){e("Ungültige ID","danger");return}t.measures.update(this.id,s).then(()=>{e("Änderungen gespeichert.","success"),this.$emit("hasSaved",{id:this.id,...this.measure})}).catch(i=>{throw e("Beim Speichern ist ein Fehler aufgetreten.","warning"),i})}},mounted(){this.measure=this.defaultValues,console.log(this.measure),this.loadFromDb()}};export{_};
