var E=Object.defineProperty;var M=(r,s,e)=>s in r?E(r,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[s]=e;var i=(r,s,e)=>(M(r,typeof s!="symbol"?s+"":s,e),e);import{m as k,a as f,p as v,b as S,d as R,S as m}from"./database-EV4tUyzx.js";import{l}from"./livequery-P21yeuae.js";import{bh as w,t as b,aD as q,v as x,bi as B}from"../../vendor-fe-4Mo55.js";import{l as y}from"./liveriskstree-iM3KwOgD.js";const g={company:"",startDate:0,endDate:void 0,address:"",jobDescr:"",equipment:[],technicians:[],supervisors:[],access:[],risks:[],measures:{},meta:{}};class P{constructor(s){i(this,"time");i(this,"signature");this.signature=s,this.time=Date.now()/1e3}}class T{constructor(s){i(this,"id");i(this,"descr");i(this,"company");i(this,"startDate");i(this,"endDate");i(this,"address");i(this,"jobDescr");i(this,"equipment");i(this,"technicians");i(this,"supervisors");i(this,"access");i(this,"risks");i(this,"allRisks");i(this,"measures");i(this,"meta");i(this,"initData");i(this,"isReady");i(this,"ready");i(this,"lastChange");i(this,"signatures");i(this,"signature");this.initData={...g},this.isReady=!1,this.init(s)}init(s){this.isReady=!1,this.measures={},this.meta={},this.allRisks=[],this.lastChange=-1,this.signatures=[],this.signature=void 0,k(this,f(g)),s&&k(this,s),this.updateInitData()}clear(){this.init(),this.id=void 0}updateInitData(){const s=f(v(this,g));this.initData=s}reset(){k(this,this.initData)}modified(){for(let s in this.initData)if(!S(this[s],this.initData[s]))return!0;return!1}loadFromDb(s){return this.init({id:s}),this.ready=l.ready().then(()=>l.table("riskassessments").getAsPromise(s)).then(e=>{this.init(e),this.isReady=!0}).catch(e=>{throw Error(e)}),this.ready}async save(){if(this.id===void 0)throw Error("Attempt to update without id");let s={};return s=f(v(this,g)),R.riskassessments.update(this.id,s).then(e=>{if(e===0)throw Error("Could not update. Does ID "+this.id+" exist?");const a=Math.floor(Date.now()/1e3);R.riskassessmentsmeta.update(this.id,{lastChange:a}),this.lastChange=a,this.updateInitData()})}dateStr(s){return s.getUTCFullYear()+"-"+(s.getUTCMonth()+1)+"-"+s.getUTCDate()}getStartDate(){return new Date(this.startDate)}setStartDate(s){this.startDate=this.dateStr(s)}getEndDate(){if(this.endDate)return new Date(this.endDate)}setEndDate(s){s===void 0?this.endDate=void 0:this.endDate=this.dateStr(s)}async calcAllRisks(){await y.ready();const s=await l.table("measures").ready(),e=await l.table("equipment").ready(),a=[],o=[...this.risks];for(this.resetMetaAddedBy(),this.equipment.forEach(u=>{e.get(u).causeRisks.forEach(d=>{o.push(d);const h=this.getMeta(d);h.addedBy.find(t=>t.id===u&&t.type==="equipment")||h.addedBy.push({id:u,type:"equipment"})})});o.length>0;){const u=o.pop();a.includes(u)||(a.push(u),this.getMeasures(u).forEach(d=>{s.get(d).causeRisks.forEach(h=>{o.push(h);const t=this.getMeta(h);t.addedBy.find(n=>n.id===d&&n.type==="measure")||t.addedBy.push({id:d,type:"measure"})})}))}return this.allRisks=a,a}resetMetaAddedBy(){for(let s in this.meta)this.getMeta(parseInt(s)).addedBy.length=0}getMeta(s){return this.meta[s]===void 0&&(this.meta[s]={risk:s,addedBy:[]}),this.meta[s]}getMeasures(s){return this.measures[s]===void 0&&(this.measures[s]=[]),this.measures[s]}getMeasuresAsRef(s){return b(this.getMeasures(s))}addSector(s={}){const e=this.access.map(a=>a.id?a.id:0).reduce((a,o)=>a>o?a+1:o+1,0);this.access.push({id:e,title:"Neuer Sektor "+e,entrance:"",exit:"",anchorPoints:"",comment:"",rescue:"",...s})}updateTechnicianSignature(s,e){this.signatures===void 0&&(this.signatures=[]),this.signatures[s]=e}}const p=w(new T);function A(r){const s=q();let e=r;return s&&s.path.startsWith("/riskassessment")&&s.params.id!==void 0&&(e=parseInt(s.params.id)),e===void 0||p.id===e||p.loadFromDb(e),p}function N(r){const s=A(r),e=b([]),a=()=>{console.log("useLiveAllRisks(): updateAllRisks()"),s.calcAllRisks().then(o=>{e.value=o,console.log("useLiveAllRisks(): updateAllRisks() -> Done")})};return x([()=>s.risks,()=>s.isReady],a),B(()=>{a()}),e}function O(r){const s=A(r),e=w({risks:[]});async function a(){var h;e.sector={},await s.ready,await y.ready();const o=await l.table("measures").ready();await s.calcAllRisks(),e.risks=s.allRisks.map(t=>({risk:y.get(t),measures:s.measures[t].map(n=>o.get(n)),meta:s.getMeta(t)})),e.sector.access=e.risks.filter(t=>t.risk.sector===m.Access),e.sector.environment=e.risks.filter(t=>t.risk.sector===m.Environment),e.sector.work=e.risks.filter(t=>t.risk.sector===m.Work),e.categories=e.risks.reduce((t,n)=>{const c=n.risk.factor.category,D=t.findIndex(C=>C.id===c.id);return D===-1?(t.push({...c,risks:[n]}),t):(t[D].risks.push(n),t)},[]),e.sector.access=e.risks.filter(t=>t.risk.sector===m.Access),e.sector.environment=e.risks.filter(t=>t.risk.sector===m.Environment),e.sector.work=e.risks.filter(t=>t.risk.sector===m.Work);const u=await l.table("technicians").ready();e.technicians=s.technicians.map(t=>u.get(t)),e.supervisors=s.supervisors.map(t=>u.get(t));const d=await l.table("equipment").ready();e.equipment=s.equipment.map(t=>d.get(t)),e.access=s.access.map(t=>{const n={};n.id=t.id,n.title=t.title;for(let c in t)c==="id"||c==="title"||(n[c]=t[c]);return n}),e.company=s.company,e.address=s.address,e.startDate=s.startDate,e.endDate=s.endDate,e.jobDescr=s.jobDescr,e.signatures=(h=s.signatures)==null?void 0:h.filter(t=>s.lastChange===-1||t.time>s.lastChange),e.signature=s.lastChange===-1||s.signature&&s.lastChange<s.signature.time?s.signature:void 0}return e.ready=a(),{exportData:e,updateExportData:a}}export{P as S,O as a,N as b,g as d,A as u};
