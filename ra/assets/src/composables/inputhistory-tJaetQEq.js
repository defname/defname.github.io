var l=Object.defineProperty;var h=(i,t,e)=>t in i?l(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var a=(i,t,e)=>(h(i,typeof t!="symbol"?t+"":t,e),e);import{d}from"./database-EV4tUyzx.js";import{l as c}from"./livequery-P21yeuae.js";import{t as m,v as y}from"../../vendor-fe-4Mo55.js";const o=c.table("inputhistory");class u{constructor(t){a(this,"inputId");a(this,"entries");this.inputId=t,this.entries=m([]),y([o.updated()],()=>{console.log("InputHistory updated"),this.updateHistory()}),o.ready().then(()=>{this.updateHistory()})}updateHistory(){o.isReady().value&&(this.entries.value=o.entries().filter(t=>t.inputId===this.inputId).map(t=>t.text))}add(...t){u.bulkAdd(...t.map(e=>({inputId:this.inputId,text:e}))).catch(e=>{console.error(e)})}remove(t){return d.inputhistory.where("inputId").equals(this.inputId).and(e=>e.text.toLowerCase()===t.trim().toLowerCase()).delete()}static bulkAddFromObject(t,e){let r=[];for(let s in t){const n=typeof t[s]=="string"?e[t[s]]:t[s](e);typeof n=="string"?r.push({inputId:s,text:n.trim()}):Array.isArray(n)?r.push(...n.map(p=>({inputId:s,text:p.trim()}))):console.warn("WHHAATT")}return u.bulkAdd(...r)}static bulkAdd(...t){const e=t.filter(r=>r.text.trim()!=="").map(r=>({...r,text:r.text.trim()}));return e.forEach(r=>{d.inputhistory.where("inputId").equals(r.inputId).and(s=>s.text.toLowerCase()===r.text.toLowerCase()).delete()}),d.inputhistory.bulkAdd(e)}}function A(i){return new u(i)}export{A as u};
