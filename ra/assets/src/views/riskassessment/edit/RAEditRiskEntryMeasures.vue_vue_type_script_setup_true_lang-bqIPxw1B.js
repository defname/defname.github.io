import{y as p,aD as k,x as _,C as u,D as c,E as s,u as e,J as R,F as a,V as v,Y as I,X as V,O as m,_ as y,M as b,N as g}from"../../../../vendor-fe-4Mo55.js";import{u as x}from"../../../composables/riskassessment-yedfBpr3.js";import{l as A}from"../../../composables/liveriskstree-iM3KwOgD.js";import{R as B}from"../../../components/RiskListItem-MFkyIvVJ.js";import{l as o}from"../../../composables/livequery-P21yeuae.js";import{_ as E}from"../../../components/MeasureCatalog.vue_vue_type_script_setup_true_lang-WQu6SpiS.js";import{T as M}from"../../../components/TemplateRiskAssessmentPage-jWM7FwVS.js";const $=p({__name:"RAEditRiskEntryMeasures",setup(C){const r=x();o.table("measures");const n=parseInt(k().params.riskId),t=A.getAsRef(n);o.table("measures").updated();const d=_(()=>t.value===void 0||!o.table("measures").isReady()?[]:o.table("measures").entries().filter(i=>i.solveRisks.includes(t.value.id)));return r.getMeasures(n),(i,l)=>(u(),c(M,null,{default:s(()=>[e(t)&&e(r).isReady?(u(),R(b,{key:0},[a(e(v),{inset:""},{default:s(()=>[a(B,{risk:e(t)},null,8,["risk"])]),_:1}),a(E,{inset:"",modelValue:e(r).measures[e(n)],"onUpdate:modelValue":l[0]||(l[0]=f=>e(r).measures[e(n)]=f),entries:d.value},{header:s(()=>[a(e(I),null,{default:s(()=>[a(e(V),null,{default:s(()=>[m("Verfügbare Maßnahmen")]),_:1}),a(e(y),{"router-link":"/measures/new?for=".concat(e(t).id)},{default:s(()=>[m("Erstellen")]),_:1},8,["router-link"])]),_:1})]),_:1},8,["modelValue","entries"])],64)):g("",!0)]),_:1}))}});export{$ as _};
