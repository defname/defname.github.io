import{y as d,aD as f,x as c,C as o,D as p,E as s,u as e,J as _,F as a,V as k,Y as v,X as R,O as u,_ as b,M as g,N as I}from"../../../vendor-fe-4Mo55.js";import{l as y}from"../../composables/liveriskstree-iM3KwOgD.js";import{l as n}from"../../composables/livequery-P21yeuae.js";import{_ as B}from"../../components/MeasureCatalog.vue_vue_type_script_setup_true_lang-WQu6SpiS.js";import{R as C}from"../../components/RiskListItem-MFkyIvVJ.js";import{T as V}from"../../components/TemplateGenericEditPage-y29F7ukF.js";const M=d({__name:"RiskDetailsPage",setup(h){const l=parseInt(f().params.id),t=y.getAsRef(l);n.table("measures").updated();const m=c(()=>t.value===void 0||!n.table("measures").isReady()?[]:n.table("measures").entries().filter(r=>r.solveRisks.includes(t.value.id)));return(r,i)=>(o(),p(V,{onShouldCancel:i[0]||(i[0]=x=>r.$router.back()),"hide-submit":""},{default:s(()=>[e(t)?(o(),_(g,{key:0},[a(e(k),{inset:""},{default:s(()=>[a(C,{risk:e(t)},null,8,["risk"])]),_:1}),a(B,{inset:"",entries:m.value},{header:s(()=>[a(e(v),null,{default:s(()=>[a(e(R),null,{default:s(()=>[u("Verfügbare Maßnahmen")]),_:1}),a(e(b),{"router-link":"/measures/new?for=".concat(e(t).id)},{default:s(()=>[u("Hinzufügen")]),_:1},8,["router-link"])]),_:1})]),_:1},8,["entries"])],64)):I("",!0)]),_:1}))}});export{M as _};
