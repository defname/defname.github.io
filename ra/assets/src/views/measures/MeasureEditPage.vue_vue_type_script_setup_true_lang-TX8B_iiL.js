import{T as f}from"../../components/TemplateGenericEditPage-y29F7ukF.js";import{M as p}from"../../components/MeasureEditor-p8piUNNJ.js";import{y as m,aD as v,C as d,D as i,E as l,bn as k,F as $,u as a}from"../../../vendor-fe-4Mo55.js";const R=m({__name:"MeasureEditPage",setup(b){let o,u={descr:"",solveRisks:[],causeRisks:[]},n=!1;const r=v();if(r.path==="/measures/new"){if(n=!0,r.query.for!==void 0){let s=parseInt(r.query.for);u.solveRisks.push(s)}}else o=parseInt(r.params.id);return(s,e)=>(d(),i(f,{onShouldCancel:e[2]||(e[2]=t=>s.$router.back()),onSubmit:e[3]||(e[3]=t=>{s.$refs.editor.saveToDb()})},{default:l(()=>[(d(),i(k,null,{default:l(()=>[$(p,{ref:"editor",id:a(o),"create-new":a(n),"default-values":a(u),onHasAdded:e[0]||(e[0]=t=>s.$router.back()),onHasSaved:e[1]||(e[1]=t=>s.$router.back())},null,8,["id","create-new","default-values"])]),_:1}))]),_:1}))}});export{R as _};
